name: Docker Image CI

on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Github Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username:  ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Tencent Clouds Registry
      uses: docker/login-action@v1 
      with:
        registry: ${{ secrets.TENCENT_YUN_REGISTRY_HOST }}
        username: ${{ secrets.TENCENT_YUN_REGISTRY_USERNAME }}
        password: ${{ secrets.TENCENT_YUN_REGISTRY_PASSWORD }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ${{ secrets.TENCENT_YUN_REGISTRY_HOST }}/${{ github.repository }}:latest
        cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max
  deploy:
    runs-on: ubuntu-latest
    environment: PROD
    needs: build
    env:
      CloudRunSecretId: "${{ secrets.CLOUDRUN_SECRETID }}"
      CloudRunSecretKey: "${{ secrets.CLOUDRUN_SECRETKEY }}"
      CloudRunEnvId: "${{ secrets.CLOUDRUN_ENVID }}"
      CloudRunServiceName: "${{ secrets.CLOUDRUN_SERVICENAME }}"
      CloudRunRegion: "${{ secrets.CLOUDRUN_REGION }}"
      RegistryHost: ${{ secrets.TENCENT_YUN_REGISTRY_HOST }}
      RepoName: ${{ github.repository }}
    if: github.ref_name == 'master'
    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Deploy to Tencent CloudBase
      run: |
        npm install -g @cloudbase/cli@latest

        cat > cloudbaserc.json << EOF
        {
          "envId": "{{ env.CloudRunEnvId }}",
          "version": "2.0",
          "$schema": "https://framework-1258016615.tcloudbaseapp.com/schema/latest.json",
          "region": "{{ env.CloudRunRegion }}",
          "framework": {
            "name": "blog",
            "plugins": {
              "client": {
                "use": "@cloudbase/framework-plugin-container",
                "inputs": {
                  "uploadType": "image",
                  "imageInfo": {
                    "imageUrl": "{{ env.RegistryHost }}/{{ env.RepoName }}:latest"
                  },
                  "serviceName": "{{ env.CloudRunServiceName }}",
                  "servicePath": "/",
                  "mode": "low-cost",
                  "cpu": 0.25,
                  "mem": 0.5,
                  "minNum": 0,
                  "maxNum": 2,
                  "containerPort": 80
                }
              }
            }
          }
        }
        EOF
  
        tcb login --apiKeyId ${CloudRunSecretId} --apiKey ${CloudRunSecretKey}

        tcb framework deploy
